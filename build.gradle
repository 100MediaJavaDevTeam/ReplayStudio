plugins {
    id 'java-library'
    id 'maven-publish'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'net.minecraftforge.gradleutils' version '2.+'
}

group = 'com.replaymod.replaystudio'
description = 'ReplayStudio'
version = gradleutils.getTagOffsetBranchVersion(null)
println('Version: ' + version)

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

application {
    mainClass = 'com.replaymod.replaystudio.launcher.Launcher'
}

compileJava {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://repo.viaversion.com'
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url 'https://jitpack.io'
    }
}

configurations {
    shade
    apiShade
    api.extendsFrom apiShade
    shade.extendsFrom apiShade
    implementation.extendsFrom shade
}

dependencies {
    apiShade 'com.github.replaymod.viaversion:viaversion-common:88dd62c'

    apiShade 'com.google.guava:guava:17.0'
    shade 'com.google.code.gson:gson:2.3.1'

    shade 'it.unimi.dsi:fastutil:8.3.1' // this is the version MC ships with 1.14.4, upgrade with care

    shade 'com.github.viaversion:opennbt:0a02214' // 2.0-SNAPSHOT (ViaVersion Edition)
    apiShade 'com.github.steveice10:packetlib:614d56cdc0' // 1.3

    shade 'org.apache.commons:commons-lang3:3.3.2'
    shade 'org.apache.commons:commons-collections4:4.0'
    shade 'commons-cli:commons-cli:1.2'

    compileOnly(annotationProcessor("org.projectlombok:lombok:1.16.6"))

    testImplementation 'junit:junit:4.11'
    testImplementation 'com.google.guava:guava-testlib:18.0'
    testImplementation 'pl.pragmatists:JUnitParams:1.0.4'
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                'Specification-Title': project.name,
                'Specification-Vendor': 'johni0702',
                'Specification-Version': gradleutils.gitInfo.tag,
                'Main-Class': application.mainClass.get(),
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'johni0702'
        ])
    }
}

def relocateTargets = [
        'org.apache.commons', 'org.slf4j', 'org.xbill.DNS',
        'it.unimi.dsi.fastutil', 'com.github.steveice10.opennbt',
        'com.github.steveice10.packetlib', 'com.google.gson',
        'com.google.thirdparty', 'io.netty'
]
shadowJar {
    archiveClassifier = 'fat'

    minimize()

    append 'META-INF/LICENSE.txt'

    exclude 'LICENSE'
    exclude '**/module-info.class'

    relocate 'us.myles.ViaVersion.api', 'com.replaymod.replaystudio.lib.viaversion.legacyapi'
    relocate 'com.viaversion.viaversion', 'com.replaymod.replaystudio.lib.viaversion'
    relocate 'com.google.common', 'com.replaymod.replaystudio.lib.guava'

    relocateTargets.forEach {
        relocate it, "${project.group}.lib.$it"
    }
}

artifacts {
    shadowJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = '100Media'
            url = 'https://maven.100media.dev/' + (project.version.endsWith('-SNAPSHOT') ? 'public-snapshots' : 'public-releases')
            credentials {
                username = project.getProperty('hm_maven_username')
                password = project.getProperty('hm_maven_password')
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = 'MCMods'
            url = "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
