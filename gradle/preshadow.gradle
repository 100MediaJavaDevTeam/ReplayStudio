// Removed support for the -source artifact (as MCProtocolLib does not provide one)
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 Raffael Herzog
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

String JAR_TASK = 'preshadowJar'
String WORKDIR = 'preshadow'
String CONFIGURATION = 'preshadow'
String APPENDIX = 'PRESHADOW'

configurations.create(CONFIGURATION)

task(JAR_TASK, type:ShadowJar) {
    destinationDir = file("$buildDir/$WORKDIR")
    appendix = APPENDIX
    configurations = [project.configurations.getByName(CONFIGURATION)]
    version = null
    includeEmptyDirs = false

    // todo: merging etc.
    exclude 'META-INF/**/*'
}
sourceSets.main.compileClasspath += files(tasks[JAR_TASK].archivePath)
sourceSets.test.compileClasspath += files(tasks[JAR_TASK].archivePath)
sourceSets.test.runtimeClasspath += files(tasks[JAR_TASK].archivePath)

if ( plugins.findPlugin(JavaPlugin) ) {
    apply plugin:'ch.raffael.preshadow.java'
}
if ( plugins.findPlugin(GroovyPlugin) ) {
    apply plugin:'ch.raffael.preshadow.groovy'
}
if ( plugins.findPlugin(IdeaPlugin) ) {
    apply plugin:'ch.raffael.preshadow.idea'
}